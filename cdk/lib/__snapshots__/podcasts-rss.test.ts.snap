// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The PodcastsRss stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuParameter",
      "GuPolicy",
      "GuPlayApp",
      "GuCertificate",
      "GuInstanceRole",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuDistributionBucketParameter",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuWazuhAccess",
      "GuAutoScalingGroup",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuAlb5xxPercentageAlarm",
      "GuUnhealthyInstancesAlarm",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "LoadBalancerPodcastsrssDnsName": {
      "Description": "DNS entry for LoadBalancerPodcastsrss",
      "Value": {
        "Fn::GetAtt": [
          "LoadBalancerPodcastsrssBC7CF35D",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "AMIPodcastsrss": {
      "Description": "Amazon Machine Image ID for the app podcasts-rss. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueaccountservicescontentawsguardianapisTESThostedzoneidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/account/services/content-aws.guardianapis/TEST/hostedzoneid",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueaccountvpcPRODliveidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/account/vpc/PROD-live/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "nonurgentalarmarnParameter": {
      "Default": "/account/content-api-common/alarms/non-urgent-alarm-topic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "subnets": {
      "Default": "/account/vpc/PROD-live/subnets",
      "Description": "Subnets to deploy into",
      "Type": "AWS::SSM::Parameter::Value<List<String>>",
    },
    "urgentalarmarnParameter": {
      "Default": "/account/content-api-common/alarms/urgent-alarm-topic",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AutoScalingGroupPodcastsrssASG9CB9EA31": {
      "Properties": {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "contentapiTESTpodcastsrss3097FC2C",
          },
          "Version": {
            "Fn::GetAtt": [
              "contentapiTESTpodcastsrss3097FC2C",
              "LatestVersionNumber",
            ],
          },
        },
        "MaxSize": "20",
        "MinSize": "2",
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "podcasts-rss",
          },
          {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/itunes-rss",
          },
          {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "LoggingStreamName",
            },
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "podcasts-rss.service",
          },
        ],
        "TargetGroupARNs": [
          {
            "Ref": "TargetGroupPodcastsrssAFF7CE9E",
          },
        ],
        "VPCZoneIdentifier": {
          "Ref": "subnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "CertificatePodcastsrssD8DCEF71": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "DomainName": "itunes-feed.content-aws.guardianapis.com",
        "DomainValidationOptions": [
          {
            "DomainName": "itunes-feed.content-aws.guardianapis.com",
            "HostedZoneId": {
              "Ref": "SsmParameterValueaccountservicescontentawsguardianapisTESThostedzoneidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "podcasts-rss",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/itunes-rss",
          },
          {
            "Key": "Name",
            "Value": "PodcastsRss/CertificatePodcastsrss",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "DescribeEC2PolicyFF5F9295": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": [
          {
            "Ref": "InstanceRolePodcastsrss1E04C9E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyPodcastsrss50ADB5E6": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/content-api/TEST/podcasts-rss/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyPodcastsrss50ADB5E6",
        "Roles": [
          {
            "Ref": "InstanceRolePodcastsrss1E04C9E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupPodcastsrss2CF69EBA": {
      "Properties": {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "podcasts-rss",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/itunes-rss",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcPRODliveidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupPodcastsrssfromPodcastsRssLoadBalancerPodcastsrssSecurityGroupD85153E0900082E9252A": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupPodcastsrss2CF69EBA",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerPodcastsrssSecurityGroup4AAD19F5",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": [
          {
            "Ref": "InstanceRolePodcastsrss1E04C9E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "High5xxPercentageAlarmPodcastsrss554F7C93": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":",
                {
                  "Ref": "urgentalarmarnParameter",
                },
              ],
            ],
          },
        ],
        "AlarmDescription": "podcasts-rss exceeded 20% error rate",
        "AlarmName": "High 5XX error % from podcasts-rss in TEST",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 2,
        "Metrics": [
          {
            "Expression": "100*(m1+m2)/m3",
            "Id": "expr_1",
            "Label": "% of 5XX responses served for podcasts-rss (load balancer and instances combined)",
          },
          {
            "Id": "m1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "LoadBalancer",
                    "Value": {
                      "Fn::GetAtt": [
                        "LoadBalancerPodcastsrssBC7CF35D",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_ELB_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "LoadBalancer",
                    "Value": {
                      "Fn::GetAtt": [
                        "LoadBalancerPodcastsrssBC7CF35D",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_Target_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m3",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "LoadBalancer",
                    "Value": {
                      "Fn::GetAtt": [
                        "LoadBalancerPodcastsrssBC7CF35D",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "RequestCount",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 20,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "HighCPU94686517": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Ref": "ScaleUpAF7DDD3C",
          },
        ],
        "AlarmDescription": "CPU utilization alarm for autoscaling",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "AutoScalingGroupPodcastsrssASG9CB9EA31",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "OKActions": [
          {
            "Ref": "ScaleDown2D6349BF",
          },
        ],
        "Period": 60,
        "Statistic": "Average",
        "Threshold": 50,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "InstanceRolePodcastsrss1E04C9E0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
        ],
        "Path": "/",
        "Tags": [
          {
            "Key": "App",
            "Value": "podcasts-rss",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/itunes-rss",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ListenerPodcastsrss8FC1EFD2": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "CertificatePodcastsrssD8DCEF71",
            },
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroupPodcastsrssAFF7CE9E",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancerPodcastsrssBC7CF35D",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerPodcastsrssBC7CF35D": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LoadBalancerPodcastsrssSecurityGroup4AAD19F5",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "subnets",
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "podcasts-rss",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/itunes-rss",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerPodcastsrssHttpToHttps563CC320": {
      "Properties": {
        "DefaultActions": [
          {
            "RedirectConfig": {
              "Port": "443",
              "Protocol": "https",
              "StatusCode": "HTTP_301",
            },
            "Type": "redirect",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancerPodcastsrssBC7CF35D",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerPodcastsrssSecurityGroup4AAD19F5": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB PodcastsRssLoadBalancerPodcastsrss425E3E81",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "podcasts-rss",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/itunes-rss",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcPRODliveidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerPodcastsrssSecurityGrouptoPodcastsRssGuHttpsEgressSecurityGroupPodcastsrssC8522D239000D9C44261": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupPodcastsrss2CF69EBA",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerPodcastsrssSecurityGroup4AAD19F5",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerPodcastsrssSecurityGrouptoPodcastsRssWazuhSecurityGroup99CA6401900069F2DA0F": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerPodcastsrssSecurityGroup4AAD19F5",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadPodcastsrss0D2605B1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/podcasts-rss",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api/podcasts-rss/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": [
          {
            "Ref": "InstanceRolePodcastsrss1E04C9E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Policies05F61E66": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "cloudformation:DescribeStackResource",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "cloudwatch:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::content-api-config/podcasts-rss/TEST/*",
            },
            {
              "Action": [
                "ec2:DescribeInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "Policies05F61E66",
        "Roles": [
          {
            "Ref": "InstanceRolePodcastsrss1E04C9E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScaleDown2D6349BF": {
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "AutoScalingGroupPodcastsrssASG9CB9EA31",
        },
        "Cooldown": "300",
        "PolicyType": "StepScaling",
        "StepAdjustments": [
          {
            "MetricIntervalLowerBound": 0,
            "ScalingAdjustment": -1,
          },
        ],
      },
      "Type": "AWS::AutoScaling::ScalingPolicy",
    },
    "ScaleUpAF7DDD3C": {
      "Properties": {
        "AdjustmentType": "PercentChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "AutoScalingGroupPodcastsrssASG9CB9EA31",
        },
        "Cooldown": "300",
        "PolicyType": "StepScaling",
        "StepAdjustments": [
          {
            "MetricIntervalLowerBound": 0,
            "ScalingAdjustment": 100,
          },
        ],
      },
      "Type": "AWS::AutoScaling::ScalingPolicy",
    },
    "TargetGroupPodcastsrssAFF7CE9E": {
      "Properties": {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "App",
            "Value": "podcasts-rss",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/itunes-rss",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcPRODliveidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "UnhealthyInstancesAlarmPodcastsrss936BAC74": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":",
                {
                  "Ref": "urgentalarmarnParameter",
                },
              ],
            ],
          },
        ],
        "AlarmDescription": "podcasts-rss's instances have failed healthchecks several times over the last 1 hour.
      This typically results in the AutoScaling Group cycling instances and can lead to problems with deployment,
      scaling or handling traffic spikes.

      Check podcasts-rss's application logs or ssh onto an unhealthy instance in order to debug these problems.",
        "AlarmName": "Unhealthy instances for podcasts-rss in TEST",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 30,
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerPodcastsrss8FC1EFD2",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerPodcastsrss8FC1EFD2",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerPodcastsrss8FC1EFD2",
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
          {
            "Name": "TargetGroup",
            "Value": {
              "Fn::GetAtt": [
                "TargetGroupPodcastsrssAFF7CE9E",
                "TargetGroupFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 60,
        "MetricName": "UnHealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "WazuhSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/itunes-rss",
          },
          {
            "Key": "Stack",
            "Value": "content-api",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcPRODliveidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WazuhSecurityGroupfromPodcastsRssLoadBalancerPodcastsrssSecurityGroupD85153E0900032596A51": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerPodcastsrssSecurityGroup4AAD19F5",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "contentapiTESTpodcastsrss3097FC2C": {
      "Properties": {
        "LaunchTemplateData": {
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "contentapiTESTpodcastsrssProfile99EC4FE7",
                "Arn",
              ],
            },
          },
          "ImageId": {
            "Ref": "AMIPodcastsrss",
          },
          "InstanceType": "t4g.small",
          "MetadataOptions": {
            "HttpTokens": "required",
          },
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "GuHttpsEgressSecurityGroupPodcastsrss2CF69EBA",
                "GroupId",
              ],
            },
            {
              "Fn::GetAtt": [
                "WazuhSecurityGroup",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/itunes-rss",
                },
                {
                  "Key": "Name",
                  "Value": "PodcastsRss/content-api-TEST-podcasts-rss",
                },
                {
                  "Key": "Stack",
                  "Value": "content-api",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/itunes-rss",
                },
                {
                  "Key": "Name",
                  "Value": "PodcastsRss/content-api-TEST-podcasts-rss",
                },
                {
                  "Key": "Stack",
                  "Value": "content-api",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash
mkdir -p $(dirname '/podcasts-rss/podcasts-rss_1.0_all.deb')
aws s3 cp 's3://",
                  {
                    "Ref": "DistributionBucketName",
                  },
                  "/content-api/TEST/podcasts-rss/podcasts-rss_1.0_all.deb' '/podcasts-rss/podcasts-rss_1.0_all.deb'
dpkg -i /podcasts-rss/podcasts-rss_1.0_all.deb",
                ],
              ],
            },
          },
        },
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "gu:cdk:version",
                "Value": "TEST",
              },
              {
                "Key": "gu:repo",
                "Value": "guardian/itunes-rss",
              },
              {
                "Key": "Name",
                "Value": "PodcastsRss/content-api-TEST-podcasts-rss",
              },
              {
                "Key": "Stack",
                "Value": "content-api",
              },
              {
                "Key": "Stage",
                "Value": "TEST",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "contentapiTESTpodcastsrssProfile99EC4FE7": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRolePodcastsrss1E04C9E0",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
  },
}
`;
